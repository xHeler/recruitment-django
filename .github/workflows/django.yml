name: Django application
on: [push]
jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build docker
        run: docker compose build
      - name: Run isort
        run: docker compose run web isort src/ --check
      - name: Run black
        run: docker compose run web black src/ --check
      - name: Run flake8
        run: docker compose run web flake8
      - name: Run tests
        run: docker compose run web python manage.py test

  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.10.8
          cache: "pip"
          cache-dependency-path: |
            requirements/local.txt
            requirements/base.txt
      # This is a more aggresive cache.
      # The one above caches the wheel files, but still runs the installation for them
      # While the cache below caches the entire Python directory.
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/Python/3.10.8/x64/ # This path is specific to Ubuntu
          key: python-${{ hashFiles('requirements/local.txt') }}-${{ hashFiles('requirements/base.txt') }}
      - name: Install dependencies
        run: pip install -r requirements/local.txt
      - name: Run isort
        uses: isort/isort-action@master
      - name: Run black
        uses: psf/black@stable
      - name: Run flake8
        run: flake8
      - name: Run tests
        run: python manage.py test
